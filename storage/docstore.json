{"docstore/metadata": {"b4845c1c-d996-4f85-8477-f3a49d21248e": {"doc_hash": "12333641d2d95ce091b81f54df8217c26decf89b41d1c5795bbcf3351a968f98"}, "6583cb35-15e4-4d5a-9960-5f22aceed123": {"doc_hash": "9339bc3865522561913e1f4f66e4a3f9c7e8c533f72f64c6b56d8d15c0bb1d16", "ref_doc_id": "b4845c1c-d996-4f85-8477-f3a49d21248e"}, "9e21ec68-1df7-4241-b912-268f2075b660": {"doc_hash": "4409b600133e9284e67ac723e2a2bbef77151d3bc97c765390c6f1c4b0f5d769", "ref_doc_id": "b4845c1c-d996-4f85-8477-f3a49d21248e"}, "75ed5bee-9dfb-40e8-bb15-29068850972a": {"doc_hash": "304265fa1eb6842759111cba5e43166970a6b51abee1e8815cdbaec6bd242664", "ref_doc_id": "b4845c1c-d996-4f85-8477-f3a49d21248e"}, "f4bc485b-4a5a-4863-a7c9-42c566af40ad": {"doc_hash": "f99f2cb0930847618dc914efd915908ef058b3f07a1b48da28c9c77932e44461", "ref_doc_id": "b4845c1c-d996-4f85-8477-f3a49d21248e"}}, "docstore/ref_doc_info": {"b4845c1c-d996-4f85-8477-f3a49d21248e": {"node_ids": ["6583cb35-15e4-4d5a-9960-5f22aceed123", "9e21ec68-1df7-4241-b912-268f2075b660", "75ed5bee-9dfb-40e8-bb15-29068850972a", "f4bc485b-4a5a-4863-a7c9-42c566af40ad"], "metadata": {"file_path": "D:\\PORTFOLIO PROJECTS\\PersonalRAG\\data\\profile.json", "file_name": "profile.json", "file_type": "application/json", "file_size": 12439, "creation_date": "2025-06-12", "last_modified_date": "2025-06-12"}}}, "docstore/data": {"6583cb35-15e4-4d5a-9960-5f22aceed123": {"__data__": {"id_": "6583cb35-15e4-4d5a-9960-5f22aceed123", "embedding": null, "metadata": {"file_path": "D:\\PORTFOLIO PROJECTS\\PersonalRAG\\data\\profile.json", "file_name": "profile.json", "file_type": "application/json", "file_size": 12439, "creation_date": "2025-06-12", "last_modified_date": "2025-06-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4845c1c-d996-4f85-8477-f3a49d21248e", "node_type": "4", "metadata": {"file_path": "D:\\PORTFOLIO PROJECTS\\PersonalRAG\\data\\profile.json", "file_name": "profile.json", "file_type": "application/json", "file_size": 12439, "creation_date": "2025-06-12", "last_modified_date": "2025-06-12"}, "hash": "12333641d2d95ce091b81f54df8217c26decf89b41d1c5795bbcf3351a968f98", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e21ec68-1df7-4241-b912-268f2075b660", "node_type": "1", "metadata": {}, "hash": "04d6e55fb6a351edda9052d66e01437a7a740cf4741e39c0ef138c994cf6931b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "[\r\n  {\r\n    \"type\": \"Personal Profile\",\r\n    \"name\": \"RONALD NYASHA KANYEPI\",\r\n    \"summary\": \"Data Scientist with over 3 years of experience transforming complex financial services and real estate data into actionable business insights. Proven ability to build robust machine learning models and real-time ETL pipelines using Python, SQL, and Spark. Experienced in deploying scalable ML solutions on AWS and GCP using MLflow, Docker, Kubernetes, and FastAPI.\",\r\n    \"contact\": {\r\n      \"email\": \"kanyepironald@gmail.com\",\r\n      \"linkedin\": \"https://www.linkedin.com/in/ronald-nyasha-kanyepi/\",\r\n      \"portfolio\": \"https://ronaldkanyepi.github.io/portfolio-website/\",\r\n      \"github\": \"https://github.com/ronaldkanyepi\"\r\n    },\r\n    \"education\": [\r\n      {\r\n        \"institution\": \"EMORY UNIVERSITY\",\r\n        \"location\": \"Atlanta, GA\",\r\n        \"degree\": \"Master of Science in Business Analytics\",\r\n        \"graduation_year\": 2025,\r\n        \"notes\": \"Graduated with MSBA Rigor Award for proficient use of advanced analytics, statistical modeling, and data engineering tools to solve complex business problems with clarity, precision, and impact.\"\r\n      },\r\n      {\r\n        \"institution\": \"UNIVERSITY OF ZIMBABWE\",\r\n        \"location\": \"Harare, Zimbabwe\",\r\n        \"degree\": \"Bachelor of Business Studies and Computing Science\",\r\n        \"graduation_year\": 2021,\r\n        \"notes\": \"Graduated with a First Class Honors Degree and was awarded the UZ Book Price (Prize given to the top student).\"\r\n      }\r\n    ],\r\n    \"certifications\": [\r\n      \"Microsoft Azure AI Fundamentals\",\r\n      \"Databricks: Generative AI Fundamentals\",\r\n      \"Oracle SE 11 Java Developer\",\r\n      \"Akka Reactive Architecture: Domain Driven Design - Level 2\",\r\n      \"Akka Reactive Architecture: Introduction to Reactive Systems - Level 2\"\r\n    ],\r\n    \"professional_experience\": [\r\n      {\r\n        \"role\": \"DATA SCIENTIST\",\r\n        \"company\": \"Pennybacker Capital - Austin, Texas\",\r\n        \"dates\": \"Dec 2024 - May 2025\",\r\n        \"achievements\": [\r\n          \"Designed and deployed machine learning models to forecast quarterly Gross Asset Value (GAV) for a $4B+ real estate portfolio achieving 1% forecasting error (MAPE) and helping prevent an estimated $2M in annual losses.\",\r\n          \"Engineered an integrated data pipeline, consolidating over 50 internal and external data sources on Databricks to create a comprehensive datasets for predictive modeling and analysis.\",\r\n          \"Initiated and analyzed Google Reviews data to create a sentiment-driven early warning system, identifying operational risks and opportunities for improvement across 11 underperforming multifamily properties.\",\r\n          \"Translated complex model predictions into actionable business strategy by using SHAP and LIME to interpret feature importance and predictive insights enhancing stakeholder trust and data-driven decision-making.\"\r\n        ]\r\n      },\r\n      {\r\n        \"role\": \"SENIOR DATA SPECIALIST\",\r\n        \"company\": \"AFC Commercial Bank - Harare, Zimbabwe\",\r\n        \"dates\": \"Mar 2024 \u2013 Jun 2024\",\r\n        \"achievements\": [\r\n        \"Led the partnership between OK-Supermarket and AFC Bank for the OK Grand Challenge promotion, driving data-driven marketing strategies; effort generated a 200% increase in POS transactions across 70+ outlets.\",\r\n        \"Developed a data visualization dashboard using Python, Apache Spark and Dash Plotly to analyze 20000+ ATM and POS terminal activity, providing critical insights and facilitating in-depth analysis and swift resolution of operational issues.\",\r\n        \"Implemented an XGBoost model to predict point-of-sale client churn, enhancing targeted retention campaign effectiveness by 25% and reducing churn rates by 15% within two months.\",\r\n        \"Led customer and loan data migration from T24 to IDC Core Banking System, achieving 99.4% accuracy by automating workflows with Python and Apache Spark for faster data cleaning and validation while minimizing downtime.\"\r\n        ]\r\n      },\r\n      {\r\n        \"role\": \"DATA SPECIALIST\",\r\n        \"company\": \"AFC Commercial Bank - Harare, Zimbabwe\",\r\n        \"dates\": \"Jun 2022 \u2013 Feb 2024\",\r\n        \"achievements\": [\r\n          \"Developed a Python backend with FastAPI to integrate the Reserve Bank of Zimbabwe (RBZ) API for the Credit Reference Bureau (CRB), reducing data processing time by 40% while enhancing regulatory compliance.\",\r\n          \"Built ETL data pipelines using Apache Kafka and Python to integrate data from the core banking system, delivering accurate KPIs across 45 AFC Commercial Bank branches.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4599, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9e21ec68-1df7-4241-b912-268f2075b660": {"__data__": {"id_": "9e21ec68-1df7-4241-b912-268f2075b660", "embedding": null, "metadata": {"file_path": "D:\\PORTFOLIO PROJECTS\\PersonalRAG\\data\\profile.json", "file_name": "profile.json", "file_type": "application/json", "file_size": 12439, "creation_date": "2025-06-12", "last_modified_date": "2025-06-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4845c1c-d996-4f85-8477-f3a49d21248e", "node_type": "4", "metadata": {"file_path": "D:\\PORTFOLIO PROJECTS\\PersonalRAG\\data\\profile.json", "file_name": "profile.json", "file_type": "application/json", "file_size": 12439, "creation_date": "2025-06-12", "last_modified_date": "2025-06-12"}, "hash": "12333641d2d95ce091b81f54df8217c26decf89b41d1c5795bbcf3351a968f98", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6583cb35-15e4-4d5a-9960-5f22aceed123", "node_type": "1", "metadata": {"file_path": "D:\\PORTFOLIO PROJECTS\\PersonalRAG\\data\\profile.json", "file_name": "profile.json", "file_type": "application/json", "file_size": 12439, "creation_date": "2025-06-12", "last_modified_date": "2025-06-12"}, "hash": "9339bc3865522561913e1f4f66e4a3f9c7e8c533f72f64c6b56d8d15c0bb1d16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75ed5bee-9dfb-40e8-bb15-29068850972a", "node_type": "1", "metadata": {}, "hash": "5343e1f5b3b04ecf69630f814dfbdae15e39fa8f95613c86246a75fd74897e75", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\",\r\n        \"Led customer and loan data migration from T24 to IDC Core Banking System, achieving 99.4% accuracy by automating workflows with Python and Apache Spark for faster data cleaning and validation while minimizing downtime.\"\r\n        ]\r\n      },\r\n      {\r\n        \"role\": \"DATA SPECIALIST\",\r\n        \"company\": \"AFC Commercial Bank - Harare, Zimbabwe\",\r\n        \"dates\": \"Jun 2022 \u2013 Feb 2024\",\r\n        \"achievements\": [\r\n          \"Developed a Python backend with FastAPI to integrate the Reserve Bank of Zimbabwe (RBZ) API for the Credit Reference Bureau (CRB), reducing data processing time by 40% while enhancing regulatory compliance.\",\r\n          \"Built ETL data pipelines using Apache Kafka and Python to integrate data from the core banking system, delivering accurate KPIs across 45 AFC Commercial Bank branches.\",\r\n          \"Redesigned and optimized merchant reporting services with Apache Airflow and DBT, automating manual processes and increasing efficiency by 80%, while delivering insights on transaction performance to key stakeholders.\",\r\n          \"Modernized a monolithic reconciliation app into scalable microservices using Docker, Python, FastAPI, Kubernetes and Angular, boosting efficiency by 150%.\"\r\n        ]\r\n      }\r\n    ],\r\n    \"technical_capabilities\": {\r\n      \"Programming & Machine Learning\": [\"Python\", \"R\", \"SQL\", \"scikit-learn\", \"Darts\", \"Statsmodels\", \"ARIMA/SARIMA\", \"TensorFlow\", \"PyTorch\", \"LightGBM\", \"XGBoost\", \"CatBoost\", \"Large Language Models (LLMs)\", \"Retrieval-Augmented Generation (RAG)\", \"LangChain\", \"LlamaIndex\", \"OpenAI APIs\", \"HuggingFace Transformers\", \"SHAP\", \"Optuna (Hyperparameter Tuning)\"],\r\n      \"Data Engineering & MLOps\": [\"Apache Spark\", \"Kafka\", \"Apache Airflow\", \"Docker\", \"Kubernetes\", \"dbt (data build tool)\", \"Great Expectations\", \"AWS S3\", \"Glue\", \"EMR\", \"GCP Cloud Functions\", \"REST APIs\", \"Feature Stores\", \"CI/CD with GitHub Actions\", \"Model Deployment via Chainlit, MLflow, FastAPI\"],\r\n      \"Visualization & Analytics\": [\"Dash (Plotly)\", \"Streamlit\", \"Tableau\", \"Power BI\", \"Excel\", \"Matplotlib\", \"Seaborn\", \"Time Series Forecasting (Multivariate, Hierarchical)\", \"A/B Testing\", \"Uplift Modeling\", \"Segmentation\", \"Deep Exploratory Data Analysis (EDA)\"],\r\n      \"Cloud, Databases & Storage\": [\"AWS (S3, SageMaker, Redshift)\", \"GCP (BigQuery, Vertex AI)\", \"Databricks\", \"PostgreSQL\",\"MS SQL Server\",\"MySQL\", \"DynamoDB\", \"MongoDB\", \"DuckDB\", \"Vector Stores (FAISS, Chroma)\", \"NoSQL\", \"ElasticSearch\", \"Parquet\", \"ORC\", \"JSON\", \"Avro\"]\r\n    }\r\n  },\r\n  {\r\n    \"type\": \"Project\",\r\n    \"project_name\": \"Customer Churn Analysis\",\r\n    \"summary\": \"This project focuses on analyzing customer data to predict churn in a telecommunications company. The primary objective is to identify key factors that contribute to customer churn and to build a predictive model that can accurately identify customers who are likely to leave.\",\r\n    \"my_role_and_achievements\": [\r\n      \"Handled missing values in 'TotalCharges' and converted data types for analysis.\",\r\n      \"Performed Exploratory Data Analysis (EDA), visualizing the churn distribution which was 26.6% Churn.\",\r\n      \"Trained multiple models including Logistic Regression,Gradient Boost, Random Forest, XGBoost, and a simple Neural Network.\",\r\n      \"Used SMOTE to handle class imbalance and Optuna for hyper-parameter tuning.\",\r\n      \"The Gradient Boosting model was selected as the final model based on AUC-ROC performance.\",\r\n      \"Used SHAP and LIME for feature importance analysis.\"\r\n    ],\r\n    \"technologies\": [\"Python\", \"Pandas\", \"NumPy\", \"Matplotlib\", \"Seaborn\", \"Scikit-learn\", \"XGBoost\", \"LIME\", \"SHAP\", \"Optuna\", \"TensorFlow Keras\"],\r\n    \"source_url\": \"https://github.com/ronaldkanyepi/Customer-Churn-Analysis\"\r\n  },\r\n  {\r\n    \"type\": \"Project\",\r\n    \"project_name\": \"Health Trends in Southern Africa: A 2013-2020 Overview\",\r\n    \"summary\": \"This project visualizes key health indicators in Southern Africa between 2013 and 2020, leveraging data from the World Bank.", "mimetype": "text/plain", "start_char_idx": 3770, "end_char_idx": 7779, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "75ed5bee-9dfb-40e8-bb15-29068850972a": {"__data__": {"id_": "75ed5bee-9dfb-40e8-bb15-29068850972a", "embedding": null, "metadata": {"file_path": "D:\\PORTFOLIO PROJECTS\\PersonalRAG\\data\\profile.json", "file_name": "profile.json", "file_type": "application/json", "file_size": 12439, "creation_date": "2025-06-12", "last_modified_date": "2025-06-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4845c1c-d996-4f85-8477-f3a49d21248e", "node_type": "4", "metadata": {"file_path": "D:\\PORTFOLIO PROJECTS\\PersonalRAG\\data\\profile.json", "file_name": "profile.json", "file_type": "application/json", "file_size": 12439, "creation_date": "2025-06-12", "last_modified_date": "2025-06-12"}, "hash": "12333641d2d95ce091b81f54df8217c26decf89b41d1c5795bbcf3351a968f98", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e21ec68-1df7-4241-b912-268f2075b660", "node_type": "1", "metadata": {"file_path": "D:\\PORTFOLIO PROJECTS\\PersonalRAG\\data\\profile.json", "file_name": "profile.json", "file_type": "application/json", "file_size": 12439, "creation_date": "2025-06-12", "last_modified_date": "2025-06-12"}, "hash": "4409b600133e9284e67ac723e2a2bbef77151d3bc97c765390c6f1c4b0f5d769", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4bc485b-4a5a-4863-a7c9-42c566af40ad", "node_type": "1", "metadata": {}, "hash": "736754d13e12db20fde3b6610485c918369605eb2513a2028012f8a3f97a73fb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\",\r\n      \"Used SMOTE to handle class imbalance and Optuna for hyper-parameter tuning.\",\r\n      \"The Gradient Boosting model was selected as the final model based on AUC-ROC performance.\",\r\n      \"Used SHAP and LIME for feature importance analysis.\"\r\n    ],\r\n    \"technologies\": [\"Python\", \"Pandas\", \"NumPy\", \"Matplotlib\", \"Seaborn\", \"Scikit-learn\", \"XGBoost\", \"LIME\", \"SHAP\", \"Optuna\", \"TensorFlow Keras\"],\r\n    \"source_url\": \"https://github.com/ronaldkanyepi/Customer-Churn-Analysis\"\r\n  },\r\n  {\r\n    \"type\": \"Project\",\r\n    \"project_name\": \"Health Trends in Southern Africa: A 2013-2020 Overview\",\r\n    \"summary\": \"This project visualizes key health indicators in Southern Africa between 2013 and 2020, leveraging data from the World Bank. The focus is on life expectancy, infant mortality rates, maternal mortality ratios, and HIV prevalence across Zimbabwe, Botswana, Mozambique, and South Africa.\",\r\n    \"my_role_and_achievements\": [\r\n      \"Utilized the World Bank API to source data.\",\r\n      \"Created multiple visualizations including a line chart for life expectancy, a bar chart for infant mortality, a box plot for HIV prevalence, and a heatmap for maternal mortality ratios.\",\r\n      \"Arranged multiple plots into a cohesive dashboard visualization.\"\r\n    ],\r\n    \"technologies\": [\"R\", \"ggplot2\", \"tidyr\", \"dplyr\", \"gridExtra\", \"reshape2\", \"viridis\", \"patchwork\", \"ggtext\"],\r\n    \"source_url\": \"https://github.com/ronaldkanyepi/Southern-Africa-Health-Indicators-Analysis/tree/main\"\r\n  },\r\n  {\r\n    \"type\": \"Project\",\r\n    \"project_name\": \"Portfolio Optimization with Streamlit and Pyomo\",\r\n    \"summary\": \"This project optimizes stock portfolios by selecting up to 10 tickers and a custom date range. It uses Pyomo for optimization to minimize risk while targeting a desired return. The app displays allocations, returns, risk, and correlation heatmaps.\",\r\n    \"my_role_and_achievements\": [\r\n      \"Developed a Streamlit application for user interaction.\",\r\n      \"Used yfinance to fetch stock data for custom date ranges.\",\r\n      \"Implemented portfolio optimization logic using the Pyomo library.\",\r\n      \"Installed the IPOPT solver to handle the optimization calculations.\",\r\n      \"Visualized results, including a heatmap of stock correlations.\"\r\n    ],\r\n    \"technologies\": [\"Python\", \"Streamlit\", \"Pyomo\", \"yfinance\", \"seaborn\", \"matplotlib\", \"numpy\", \"pandas\"],\r\n    \"source_url\": \"https://github.com/ronaldkanyepi/Portfolio-Optimization-Pyomo\"\r\n  },\r\n  {\r\n    \"type\": \"Project\",\r\n    \"project_name\": \"Zim-Places Python Package\",\r\n    \"summary\": \"A Python package that allows you to search for cities, provinces, and districts in Zimbabwe. Zimbabwe is split into eight provinces and two cities, with 59 districts and 1,200 wards.\",\r\n    \"my_role_and_achievements\": [\r\n      \"Developed and published the 'zim-places' package to PyPI.\",\r\n      \"Provided functions to get all wards, districts, cities, and provinces.\",\r\n      \"Showed examples of how to get data as JSON and convert it into customized lists of dictionaries.\"\r\n    ],\r\n    \"technologies\": [\"Python\", \"PyPI\", \"JSON\"],\r\n    \"source_url\": \"https://pypi.org/project/zim-places\"\r\n  },\r\n  {\r\n    \"type\": \"Project\",\r\n    \"project_name\": \"Log Real-Time Analysis\",\r\n    \"summary\": \"A robust real-time log aggregation and visualization system designed to handle high-throughput logs (e.g., 60,000 events/sec) using a Kafka-Spark ETL pipeline. It integrates with DynamoDB for metrics storage and visualizes insights using a Dash Plotly dashboard.\",\r\n    \"my_role_and_achievements\": [\r\n      \"Designed a scalable architecture for real-time log processing and visualization.\",\r\n      \"Handled log ingestion with Kafka and real-time aggregation with Spark, which processed logs per minute.\",\r\n      \"Stored aggregated metrics in DynamoDB for fast querying and historical logs in HDFS as Parquet files.\",\r\n      \"Developed an interactive dashboard in Dash with real-time updates for SLA metrics, error rates, and response times.\",\r\n      \"Containerized the entire architecture using Docker-compose, including Zookeeper, Kafka, DynamoDB, and a Spark-Jupyter environment.\"", "mimetype": "text/plain", "start_char_idx": 7038, "end_char_idx": 11175, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4bc485b-4a5a-4863-a7c9-42c566af40ad": {"__data__": {"id_": "f4bc485b-4a5a-4863-a7c9-42c566af40ad", "embedding": null, "metadata": {"file_path": "D:\\PORTFOLIO PROJECTS\\PersonalRAG\\data\\profile.json", "file_name": "profile.json", "file_type": "application/json", "file_size": 12439, "creation_date": "2025-06-12", "last_modified_date": "2025-06-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4845c1c-d996-4f85-8477-f3a49d21248e", "node_type": "4", "metadata": {"file_path": "D:\\PORTFOLIO PROJECTS\\PersonalRAG\\data\\profile.json", "file_name": "profile.json", "file_type": "application/json", "file_size": 12439, "creation_date": "2025-06-12", "last_modified_date": "2025-06-12"}, "hash": "12333641d2d95ce091b81f54df8217c26decf89b41d1c5795bbcf3351a968f98", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75ed5bee-9dfb-40e8-bb15-29068850972a", "node_type": "1", "metadata": {"file_path": "D:\\PORTFOLIO PROJECTS\\PersonalRAG\\data\\profile.json", "file_name": "profile.json", "file_type": "application/json", "file_size": 12439, "creation_date": "2025-06-12", "last_modified_date": "2025-06-12"}, "hash": "304265fa1eb6842759111cba5e43166970a6b51abee1e8815cdbaec6bd242664", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "It integrates with DynamoDB for metrics storage and visualizes insights using a Dash Plotly dashboard.\",\r\n    \"my_role_and_achievements\": [\r\n      \"Designed a scalable architecture for real-time log processing and visualization.\",\r\n      \"Handled log ingestion with Kafka and real-time aggregation with Spark, which processed logs per minute.\",\r\n      \"Stored aggregated metrics in DynamoDB for fast querying and historical logs in HDFS as Parquet files.\",\r\n      \"Developed an interactive dashboard in Dash with real-time updates for SLA metrics, error rates, and response times.\",\r\n      \"Containerized the entire architecture using Docker-compose, including Zookeeper, Kafka, DynamoDB, and a Spark-Jupyter environment.\"\r\n    ],\r\n    \"technologies\": [\"Python\", \"Apache Kafka\", \"Apache Spark\", \"DynamoDB\", \"HDFS\", \"Parquet\", \"Docker\", \"Dash\", \"Plotly\"],\r\n    \"source_url\": \"https://github.com/ronaldkanyepi/Log-Realtime-Analysis\"\r\n  },\r\n  {\r\n    \"type\": \"Project\",\r\n    \"project_name\": \"Zim Docs OCR-to-JSON Extractor\",\r\n    \"summary\": \"A web application built with Gradio that allows users to upload scanned documents (PDFs) or images. It uses a vision AI model to perform OCR and extract structured information into a JSON format for various document types like licenses, passports, and invoices.\",\r\n    \"my_role_and_achievements\": [\r\n      \"Built a user-friendly web application using Gradio.\",\r\n      \"Integrated a vision AI model to perform OCR and structured data extraction.\",\r\n      \"Handled both PDF and image file uploads using Gradio-PDF and PyMuPDF.\",\r\n      \"Managed API key integration via environment variables for use with services like OpenRouter.ai, making it compatible with Hugging Face Spaces secrets.\"\r\n    ],\r\n    \"technologies\": [\"Python\", \"Gradio\", \"Gradio-PDF\", \"PyMuPDF (fitz)\", \"OpenAI-compatible APIs\"],\r\n    \"source_url\": {\"demo\":\"https://huggingface.co/spaces/NyashaK/DocOCR2JSON\",\"github\": \"https://github.com/ronaldkanyepi/docs-ocr-2-json\"}\r\n  }\r\n]", "mimetype": "text/plain", "start_char_idx": 10453, "end_char_idx": 12435, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}}